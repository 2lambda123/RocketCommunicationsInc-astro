@use '../../global/mixins';

:host {
    display: contents;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

//  this styling is only used in storybook up for presentational purposes
//  default flex position takes up the entire body element en spills overlay
//  on top of the docs page

:host([hidden]) {
    display: none;
}

rux-button-group {
    margin-top: auto;
    margin-left: auto;
    align-self: flex-end;
}

.rux-dialog {
    &__wrapper {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1100;
        background-color: rgba(0, 0, 0, 0.5);
        @include mixins.animation(fadeIn, 0.5s);
    }
    &__dialog {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background-color: var(--color-background-surface-default);
        width: 28rem;
        border: 0;
        margin: auto;
        padding: 0;
        user-select: none;
        box-shadow: var(--shadow-outer-dialog);
        max-height: 100%;
    }

    &__header {
        display: flex;
        flex-grow: 0;
        flex-shrink: 0;
        align-items: center;
        width: 100%;
        padding: 16px 20px;
        background-color: var(--color-background-surface-header);
        color: var(--color-text-primary);
        user-select: none;
        font-family: var(--font-heading-2-font-family);
        font-size: var(--font-heading-2-font-size);
        font-weight: var(--font-heading-2-font-weight);
        letter-spacing: var(--font-heading-2-letter-spacing);
        ::slotted(h6),
        ::slotted(h5),
        ::slotted(h4),
        ::slotted(h3),
        ::slotted(h2),
        ::slotted(h1) {
            margin-block-start: 0;
            margin-block-end: 0;
        }
    }

    &__content {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        padding: 1rem 1rem 0 1rem;
        color: var(--color-text-primary);
        overflow: auto;
        white-space: nowrap;
        &::-webkit-scrollbar {
            width: 16px;
            height: 16px;
            background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
            background-color: var(
                --color-border-interactive-muted,
                rgb(43, 101, 155)
            );
            border-radius: 8px;
            border: 3px solid transparent;
            background-clip: padding-box;
        }

        /* visually "centers" because the dark edge of the shadow gives the illusion this is offset */
        &::-webkit-scrollbar-thumb:vertical {
            border-left-width: 4px;
        }

        &::-webkit-scrollbar-thumb:horizontal {
            border-top-width: 4px;
        }

        &::-webkit-scrollbar-thumb:active,
        &::-webkit-scrollbar-thumb:hover {
            background-color: var(
                --color-background-interactive-default,
                rgb(58, 129, 191)
            );
        }

        &::-webkit-scrollbar-track,
        &::-webkit-scrollbar-corner {
            background-color: var(--color-background-surface-default);
        }

        &::-webkit-scrollbar-track:vertical {
            box-shadow: inset 3px 3px 3px 0px rgba(0, 0, 0, 0.5);
        }

        &::-webkit-scrollbar-track:horizontal {
            box-shadow: inset 1px 3px 3px 0px rgba(0, 0, 0, 0.5);
        }
    }
    &__footer {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        padding: 0 1rem 1rem 1rem;
        color: var(--color-text-primary);
    }

    &__message {
        margin: 0.5rem 1.875rem 2.5rem 1.875rem;
    }
    .rux-button {
        box-shadow: none !important;
    }
    &__header.hidden {
        display: none;
    }
    &__message.hidden {
        display: none;
    }
}

rux-icon {
    margin-right: 0.75rem;
}

@include mixins.keyframes(fadeIn) {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
