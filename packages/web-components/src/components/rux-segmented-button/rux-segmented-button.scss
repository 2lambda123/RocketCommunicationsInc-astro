:host {
    /* @TODO: Should these be moved into the design tokens library? */
    /* references */
    --disabled-opacity: var(--opacity-40);

    /* @TODO: Should this custom property exist elsewhere. */
    /* sizing unit */
    --scale: 0.25rem;

    /* @TODO: Should this custom property exist elsewhere. */
    /* font-size: 16px; line-height: 20px; */
    --button-font: 1rem/1.25 'Roboto', system-ui, sans-serif;

    display: inline-flex;
    flex-flow: column;
}

/* @TODO: Should this reset be moved into a separate file? */

/* unset/list */
ul {
    list-style-type: none;
    margin-block: 0;
    padding-inline: 0;
}

/* hide the input[type="checkbox"] implementation detail */
input {
    display: none;
}

label {
  cursor: inherit;
}

.rux-segmented-buttons {
    border-radius: var(--radius-base);
    display: flex;
}

.rux-segmented-button {
    --border-color:var(--color-text-interactive-default);

    box-shadow: var(--border-color, currentColor) 0 0 0 1px inset;
    color: var(--color-text-interactive-default);
    cursor: pointer;
    font: var(--button-font);

    /* collapse inline borders */
    & + & {
        margin-inline-start: -1px;
    }

    &:nth-child(1) {
        border-start-start-radius: inherit;
        border-end-start-radius: inherit;
    }

    &:nth-last-child(1) {
        border-start-end-radius: inherit;
        border-end-end-radius: inherit;
    }

    &.--small {
        padding-block: calc(1 * var(--scale));
        padding-inline: calc(4 * var(--scale));
    }

    &.--medium {
        padding-block: calc(1.5 * var(--scale));
        padding-inline: calc(4 * var(--scale));
    }

    &.--large {
        padding-block: calc(3 * var(--scale));
        padding-inline: calc(4 * var(--scale));
    }

    &.--disabled {
        cursor: not-allowed;
        opacity: var(--disabled-opacity);
    }

    &:hover,
    &:focus-visible {
      background-color: var(--color-background-base-hover);
      color: var(--color-text-interactive-hover);
    }

    &.--selected {
      background-color: var(--color-background-base-selected);
      color: var(--color-text-primary);
    }
}
