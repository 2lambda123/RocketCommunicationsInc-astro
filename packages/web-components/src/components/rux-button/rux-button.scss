:host {
    /* @TODO: Should these be moved into the design tokens library? */
    /* references */
    --disabled-opacity: var(--opacity-40);
    --size: 0.25rem;

    /* @TODO: Should these be moved into the design tokens library? */
    /* aliases */
    --button-font-size: var(--font-body-1-font-size);
    --button-line-size: var(--line-height-sm);

    cursor: pointer;
    display: inline-flex;
    flex-flow: column wrap;
}

:host([hidden]) {
  display: none;
}

:host([disabled]) {
    cursor: not-allowed;
}

button {
    appearance: none;
    background-color: transparent;
    border-width: 0;
    color: inherit;
    font: inherit;
    line-height: inherit;
    margin: 0;
    padding: 0;
}

.rux-button {
    align-items: center;
    border-radius: var(--radius-base);
    cursor: pointer;
    box-shadow: var(--border-color, transparent) 0px 0px var(--border-width, 0px) inset;
    display: flex;
    justify-content: center;
    user-select: none;

    /* body/body-1 */
    font-size: var(--button-font-size);
    letter-spacing: var(--font-body-1-letter-spacing);
    line-height: var(--button-line-size);

    & rux-icon {
        align-items: center;
        block-size: calc(5 * var(--size));
        inline-size: calc(5 * var(--size));
        color: currentColor;
        display: inline-flex;
        justify-content: center;
        fill: currentColor;
        margin-inline: calc(-0.5 * var(--size)) calc(1.5 * var(--size));
    }

    & slot {
        display: inline-block;
    }

    &:disabled {
        cursor: not-allowed;
        opacity: var(--disabled-opacity);
        pointer-events: none;
    }

    &.--icon-only {
        & rux-icon {
            margin-inline: calc(-4 * var(--size));
        }
    }

    &.--small-size {
        padding-block: var(--spacing-050);
        padding-inline: var(--spacing-4);
    }

    &.--medium-size {
        padding-block: calc(1.5 * var(--size));
        padding-inline: var(--spacing-4);
    }

    &.--large-size {
        padding-block: var(--spacing-2);
        padding-inline: var(--spacing-4);
    }

    &.--default-appearance {
        color: var(--color-text-inverse);
        background-color: var(--color-background-interactive-default);

        &:hover {
            background-color: var(--color-background-interactive-hover);
        }
    }

    &.--secondary-appearance {
        --border-color: currentColor;
        --border-width: 1px;

        background-color: var(--color-background-base-default);
        color: var(--color-text-interactive-default);

        &:hover {
            color: var(--color-text-interactive-hover);
        }
    }

    &.--borderless-appearance {
        background-color: var(--color-background-base-default);
        color: var(--color-text-interactive-default);

        &:hover {
            color: var(--color-text-interactive-hover);
        }
    }
}
